AWSTemplateFormatVersion: '2010-09-09'
Description: Some storage with input and output

Parameters:
  ProjectName:
    Type: String
    Description: Nome dell'ambiente destinazione

  # Unused but required by CD pipeline
  MicroserviceNumber:
    Type: Number
    Description: An unique number that identify the microservice inside the ECS cluster.

  # Unused but required by CD pipeline
  TemplateBucketBaseUrl:
    Type: String
    Description: URL da cui caricare i frammenti di template di infrastruttura

  Version:
    Type: String
    Description: 'keep track of used projects commitIds'

  LogsKinesisSourceStreamArn:
    Type: String
    Description: 'Where to send Logs'

  LogRetention:
    Type: Number
    Default: 14

  AlarmSNSTopicName:
    Type: String
    Description: 'Topic alarm'

Resources:

  ApiKeyAuthorizerV2LambdaLogGroup:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain    
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/log-group.yaml"
      Parameters:
        LogGroupName: !Sub '${ProjectName}-ApiKeyAuthorizerV2Lambda'
        LogGroupPrefix: '/aws/lambda'
        LogGroupRetention: !Ref LogRetention
        LogsKinesisSourceStreamArn: !Ref LogsKinesisSourceStreamArn

  IoAuthorizerLambdaLogGroup:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain    
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/log-group.yaml"
      Parameters:
        LogGroupName: !Sub '${ProjectName}-ioAuthorizerLambda'
        LogGroupPrefix: '/aws/lambda'
        LogGroupRetention: !Ref LogRetention
        LogsKinesisSourceStreamArn: !Ref LogsKinesisSourceStreamArn

  JwtAuthorizerLambdaLogGroup:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain    
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/log-group.yaml"
      Parameters:
        LogGroupName: !Sub '${ProjectName}-jwtAuthorizerLambda'
        LogGroupPrefix: '/aws/lambda'
        LogGroupRetention: !Ref LogRetention
        LogsKinesisSourceStreamArn: !Ref LogsKinesisSourceStreamArn

  B2BAuthorizerLambdaLogGroup:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain    
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/log-group.yaml"
      Parameters:
        LogGroupName: !Sub '${ProjectName}-b2bAuthorizerLambda'
        LogGroupPrefix: '/aws/lambda'
        LogGroupRetention: !Ref LogRetention
        LogsKinesisSourceStreamArn: !Ref LogsKinesisSourceStreamArn

  JWKSCacheRefreshLambdaLogGroup:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain    
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/log-group.yaml"
      Parameters:
        LogGroupName: !Sub '${ProjectName}-jwksCacheRefreshLambda'
        LogGroupPrefix: '/aws/lambda'
        LogGroupRetention: !Ref LogRetention
        LogsKinesisSourceStreamArn: !Ref LogsKinesisSourceStreamArn        

  BackofficeAuthorizerLambdaLogGroup:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain    
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/log-group.yaml"
      Parameters:
        LogGroupName: !Sub '${ProjectName}-backofficeAuthorizerLambda'
        LogGroupPrefix: '/aws/lambda'
        LogGroupRetention: !Ref LogRetention
        LogsKinesisSourceStreamArn: !Ref LogsKinesisSourceStreamArn

  TokenExchangeLambdaLogGroup:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain    
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/log-group.yaml"
      Parameters:
        LogGroupName: !Sub '${ProjectName}-tokenExchangeLambda'
        LogGroupPrefix: '/aws/lambda'
        LogGroupRetention: !Ref LogRetention
        LogsKinesisSourceStreamArn: !Ref LogsKinesisSourceStreamArn

  JwksCacheForceRefreshLambdaLogGroup:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain    
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/log-group.yaml"
      Parameters:
        LogGroupName: !Sub '${ProjectName}-jwksCacheForceRefreshLambda'
        LogGroupPrefix: '/aws/lambda'
        LogGroupRetention: !Ref LogRetention
        LogsKinesisSourceStreamArn: !Ref LogsKinesisSourceStreamArn
        
  # ###      SESSION TOKEN SIGNING/VALIDATION KEY PAIR      ###
  # ###########################################################
  PnAuthFleetJwtSignKey:
    Type: 'AWS::KMS::Key'
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Description: RSA-2048 key to generate session token
      KeySpec: RSA_2048
      KeyUsage: SIGN_VERIFY
      PendingWindowInDays: 7
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'

  # pn-AuthFleet

  AuthJwtIssuersTable:
    Type: AWS::DynamoDB::Table
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain 
    Properties:
      TableName: !Sub "${ProjectName}-AuthJwtIssuers"
      AttributeDefinitions:
        - AttributeName: "hashKey"
          AttributeType: "S"
        - AttributeName: "sortKey"
          AttributeType: "S"
        - AttributeName: "jwksCacheExpireSlot"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "hashKey"
          KeyType: "HASH"
        - AttributeName: "sortKey"
          KeyType: "RANGE"
      GlobalSecondaryIndexes:
        - IndexName: "jwksCacheExpireSlotIndex"
          KeySchema:
            - AttributeName: "jwksCacheExpireSlot"
              KeyType: "HASH"
          Projection:
            ProjectionType: "INCLUDE"
            NonKeyAttributes:
              - "iss"
      BillingMode: "PAY_PER_REQUEST"
      TimeToLiveSpecification:
        AttributeName: "ttl"
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  AuthJwtAttributesTable:
    Type: AWS::DynamoDB::Table
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain 
    Properties:
      TableName: !Sub "${ProjectName}-AuthJwtAttributes"
      AttributeDefinitions:
        - AttributeName: "hashKey"
          AttributeType: "S"
        - AttributeName: "sortKey"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "hashKey"
          KeyType: "HASH"
        - AttributeName: "sortKey"
          KeyType: "RANGE"
      BillingMode: "PAY_PER_REQUEST"
      TimeToLiveSpecification:
        AttributeName: "ttl"
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  JWKSCacheBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub '${ProjectName}-jwks-cache-bucket-${AWS::Region}-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  JWKSCacheForceRefreshQueue:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain    
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/sqs-queue.yaml"
      Parameters:
        QueueName: !Sub '${ProjectName}-jwks_cache_force_refresh_queue'
        HasDLQ:  "true"
        AlarmSNSTopicName: !Ref AlarmSNSTopicName
        VisibilityTimeout: 182  #Constraint to https://pagopa.atlassian.net/wiki/spaces/PN/pages/898170899/SRS+AuthN+B2B+migliorie+runbook+e+monitoring#Work-Item-2.1---%5BINFRA%5D-creare-coda-e-nuova-lambda
        QueueHasAlarm: "false"
        DelaySeconds: 0
  
Outputs:
  PnAuthFleetJwtSignKeyId:
    Value: !Ref PnAuthFleetJwtSignKey

  ApiKeyAuthorizerV2LambdaName:
    Value: !Sub '${ProjectName}-ApiKeyAuthorizerV2Lambda'

  IoAuthorizerLambdaName:
    Value: !Sub '${ProjectName}-ioAuthorizerLambda'

  JwtAuthorizerLambdaName:
    Value: !Sub '${ProjectName}-jwtAuthorizerLambda'

  B2BAuthorizerLambdaName:
    Value: !Sub '${ProjectName}-b2bAuthorizerLambda'

  JWKSCacheRefreshLambdaName:
    Value: !Sub '${ProjectName}-jwksCacheRefreshLambda'

  BackofficeAuthorizerLambdaName:
    Value: !Sub '${ProjectName}-backofficeAuthorizerLambda'

  TokenExchangeLambdaName:
    Value: !Sub '${ProjectName}-tokenExchangeLambda'

  JWKSCacheForceRefreshLambdaName:
    Value: !Sub '${ProjectName}-jwksCacheForceRefreshLambda'

  # Dynamo table
  AuthJwtIssuersTableName:
    Description: Name of dynamodb table containing auth jwt issuers data 
    Value: !Ref AuthJwtIssuersTable

  AuthJwtIssuersTableArn:
    Description: ARN of dynamodb table containing auth jwt issuers data 
    Value: !Sub '${AuthJwtIssuersTable.Arn}'

  AuthJwtAttributesTableName:
    Description: Name of dynamodb table containing auth jwt attributes data 
    Value: !Ref AuthJwtAttributesTable

  AuthJwtAttributesTableArn:
    Description: ARN of dynamodb table containing auth jwt attributes data 
    Value: !Sub '${AuthJwtAttributesTable.Arn}'

  JWKSCacheBucketName:
    Description: Name of S3 bucket containing JWKS data
    Value: !Ref JWKSCacheBucket

  JWKSCacheBucketArn:
    Description: ARN of S3 bucket containing JWKS data
    Value: !Sub '${JWKSCacheBucket.Arn}'

  #SQS
  JWKSCacheForceRefreshQueueName:
    Value: !GetAtt JWKSCacheForceRefreshQueue.Outputs.QueueName
    Description: JWKSCacheForceRefresh queue name

  JWKSCacheForceRefreshQueueARN:
    Value: !GetAtt JWKSCacheForceRefreshQueue.Outputs.QueueARN
    Description: JWKSCacheForceRefresh queue arn
  
  JWKSCacheForceRefreshDLQName:
    Value: !GetAtt JWKSCacheForceRefreshQueue.Outputs.DeadLetterQueueName
    Description: JWKSCacheForceRefresh-DLQ queue name
  
  JWKSCacheForceRefreshDLQARN:
    Value: !GetAtt JWKSCacheForceRefreshQueue.Outputs.DeadLetterQueueARN
    Description: JWKSCacheForceRefresh-DLQ queue ARN
  
  JWKSCacheForceRefreshDLQAlarmARN:
    Value: !GetAtt JWKSCacheForceRefreshQueue.Outputs.SqsDLQAlarmArn
    Description: JWKSCacheForceRefresh-DLQ alarm ARN
  
  JWKSCacheForceRefreshAlarmARN:
    Value: !GetAtt JWKSCacheForceRefreshQueue.Outputs.SqsAgeAlarmArn  
    Description: JWKSCacheForceRefresh-DLQ age alarm ARN