AWSTemplateFormatVersion: '2010-09-09'
Description: Some storage with input and output

Parameters:
  ProjectName:
    Type: String
    Description: Nome dell'ambiente destinazione

  # Unused but required by CD pipeline
  MicroserviceNumber:
    Type: Number
    Description: An unique number that identify the microservice inside the ECS cluster.

  # Unused but required by CD pipeline
  TemplateBucketBaseUrl:
    Type: String
    Description: URL da cui caricare i frammenti di template di infrastruttura

  Version:
    Type: String
    Description: 'keep track of used projects commitIds'

  LogsKinesisSourceStreamArn:
    Type: String
    Description: 'Where to send Logs'

  LogRetention:
    Type: Number
    Default: 14

Resources:

  ApiKeyAuthorizerV2LambdaLogGroup:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain    
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/log-group.yaml"
      Parameters:
        LogGroupName: !Sub '${ProjectName}-ApiKeyAuthorizerV2Lambda'
        LogGroupPrefix: '/aws/lambda'
        LogGroupRetention: !Ref LogRetention
        LogsKinesisSourceStreamArn: !Ref LogsKinesisSourceStreamArn

  IoAuthorizerLambdaLogGroup:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain    
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/log-group.yaml"
      Parameters:
        LogGroupName: !Sub '${ProjectName}-ioAuthorizerLambda'
        LogGroupPrefix: '/aws/lambda'
        LogGroupRetention: !Ref LogRetention
        LogsKinesisSourceStreamArn: !Ref LogsKinesisSourceStreamArn

  JwtAuthorizerLambdaLogGroup:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain    
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/log-group.yaml"
      Parameters:
        LogGroupName: !Sub '${ProjectName}-jwtAuthorizerLambda'
        LogGroupPrefix: '/aws/lambda'
        LogGroupRetention: !Ref LogRetention
        LogsKinesisSourceStreamArn: !Ref LogsKinesisSourceStreamArn

  B2BAuthorizerLambdaLogGroup:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain    
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/log-group.yaml"
      Parameters:
        LogGroupName: !Sub '${ProjectName}-b2bAuthorizerLambda'
        LogGroupPrefix: '/aws/lambda'
        LogGroupRetention: !Ref LogRetention
        LogsKinesisSourceStreamArn: !Ref LogsKinesisSourceStreamArn

  JWKSCacheRefreshLambdaLogGroup:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain    
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/log-group.yaml"
      Parameters:
        LogGroupName: !Sub '${ProjectName}-jwksCacheRefreshLambda'
        LogGroupPrefix: '/aws/lambda'
        LogGroupRetention: !Ref LogRetention
        LogsKinesisSourceStreamArn: !Ref LogsKinesisSourceStreamArn        

  BackofficeAuthorizerLambdaLogGroup:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain    
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/log-group.yaml"
      Parameters:
        LogGroupName: !Sub '${ProjectName}-backofficeAuthorizerLambda'
        LogGroupPrefix: '/aws/lambda'
        LogGroupRetention: !Ref LogRetention
        LogsKinesisSourceStreamArn: !Ref LogsKinesisSourceStreamArn

  TokenExchangeLambdaLogGroup:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain    
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/log-group.yaml"
      Parameters:
        LogGroupName: !Sub '${ProjectName}-tokenExchangeLambda'
        LogGroupPrefix: '/aws/lambda'
        LogGroupRetention: !Ref LogRetention
        LogsKinesisSourceStreamArn: !Ref LogsKinesisSourceStreamArn

  # ###      SESSION TOKEN SIGNING/VALIDATION KEY PAIR      ###
  # ###########################################################
  PnAuthFleetJwtSignKey:
    Type: 'AWS::KMS::Key'
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Description: RSA-2048 key to generate session token
      KeySpec: RSA_2048
      KeyUsage: SIGN_VERIFY
      PendingWindowInDays: 7
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'

Outputs:
  PnAuthFleetJwtSignKeyId:
    Value: !Ref PnAuthFleetJwtSignKey

  ApiKeyAuthorizerV2LambdaName:
    Value: !Sub '${ProjectName}-ApiKeyAuthorizerV2Lambda'

  IoAuthorizerLambdaName:
    Value: !Sub '${ProjectName}-ioAuthorizerLambda'

  JwtAuthorizerLambdaName:
    Value: !Sub '${ProjectName}-jwtAuthorizerLambda'

  B2BAuthorizerLambdaName:
    Value: !Sub '${ProjectName}-b2bAuthorizerLambda'

  JWKSCacheRefreshLambdaName:
    Value: !Sub '${ProjectName}-jwksCacheRefreshLambda'

  BackofficeAuthorizerLambdaName:
    Value: !Sub '${ProjectName}-backofficeAuthorizerLambda'

  TokenExchangeLambdaName:
    Value: !Sub '${ProjectName}-tokenExchangeLambda'